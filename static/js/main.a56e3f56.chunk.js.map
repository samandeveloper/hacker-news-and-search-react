{"version":3,"sources":["reducer.js","actions.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["reducer","state","action","type","isLoading","hits","payload","nbPages","filter","story","objectID","query","page","nextPage","prevPage","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","data","console","log","useEffect","Provider","value","removeStory","id","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Stories","map","title","points","author","num_comments","href","onClick","Buttons","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a56e3f56.chunk.js","sourcesContent":["import {\r\n  SET_LOADING,\r\n  SET_STORIES,\r\n  REMOVE_STORY,\r\n  HANDLE_PAGE,\r\n  HANDLE_SEARCH,\r\n} from './actions'\r\n\r\nconst reducer = (state,action) => {\r\n  //use switch or chain of if\r\n  switch(action.type){\r\n    case SET_LOADING:\r\n      return ({...state,isLoading:true})\r\n    case SET_STORIES:\r\n      return({\r\n        ...state, \r\n        isLoading:false,\r\n        hits: action.payload.hits,\r\n        nbPages: action.payload.nbPages,\r\n      })\r\n    case REMOVE_STORY:\r\n      return({\r\n        ...state,\r\n        hits: state.hits.filter((story)=>     //state.hits are 20 arrays\r\n        story.objectID !== action.payload   //the id is objectID in this api--action.payload is the id of each story\r\n        )\r\n      })\r\n    case HANDLE_SEARCH:\r\n      return({\r\n        ...state,\r\n        query: action.payload,   \r\n        page:0\r\n      })\r\n    //below we have two sections: increment and decrement\r\n    case HANDLE_PAGE:\r\n      if(action.payload === 'inc'){\r\n        let nextPage = state.page + 1\r\n        if(nextPage > state.nbPages - 1){   //if we reaches the last page \r\n          nextPage = 0\r\n        }\r\n        return({\r\n          ...state,\r\n          page:nextPage\r\n        })\r\n      }\r\n      if(action.payload === 'dec'){\r\n          let prevPage = state.page - 1   //prevPage is 0-49\r\n          if(prevPage < 0){\r\n            prevPage = state.nbPages - 1    //or prevPage = 49\r\n          }\r\n          return({\r\n            ...state,\r\n            page:prevPage \r\n          })\r\n       \r\n      }\r\n      default:\r\n        throw new Error ('no matching \"${action.type}\" action type')\r\n  }\r\n}\r\nexport default reducer\r\n","export const SET_LOADING = 'SET_LOADING'\r\nexport const SET_STORIES = 'SET_STORIES'\r\nexport const REMOVE_STORY = 'REMOVE_STORY'\r\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\r\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\r\n","import React, { useContext, useEffect, useReducer } from 'react'\r\n\r\nimport {\r\n  SET_LOADING,\r\n  SET_STORIES,\r\n  REMOVE_STORY,  \r\n  HANDLE_PAGE,   \r\n  HANDLE_SEARCH,   \r\n} from './actions'\r\n\r\nimport reducer from './reducer'\r\n//below is not the complete url\r\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?'\r\n\r\n//define all the states in the initialState below\r\nconst initialState = {\r\n  isLoading:true,\r\n  hits:[],   //hits are stories--the array of objects in api\r\n  query: 'react',   //search section\r\n  page:0,     //begins--pages from 0 to 49 since the api begins with page=0\r\n  nbPages:0,  //ends-number of all the pages-nbPages = 50\r\n}\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n  //define the useReducer\r\n  const [state,dispatch] = useReducer(reducer,initialState)\r\n\r\n  //fetch the url from API\r\n  const fetchStories = async(url)=> {\r\n    //turn the state isLoading to true--payload is optional so we don't add it below\r\n    dispatch({type:SET_LOADING})\r\n    try{\r\n      const response = await fetch(url) \r\n      const data = await response.json()\r\n      console.log(data)\r\n      console.log(data.hits)\r\n      \r\n      //update stories state--we know about the hits but we add nbPages since in the state above it's 0 but now we should assign it to 50\r\n      dispatch({type:SET_STORIES,payload:{hits:data.hits, nbPages:data.nbPages}})\r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  //handle functions\r\n  const removeStory = (id) =>{\r\n    dispatch({type: REMOVE_STORY, payload:id})\r\n  }\r\n  const handleSearch = (query) =>{\r\n    dispatch({type:HANDLE_SEARCH, payload:query})\r\n  }\r\n  const handlePage = (value) =>{     //increment and decrement of the page--or we can write decrement and increment functions seperately\r\n    dispatch({type:HANDLE_PAGE,payload:value})\r\n  }\r\n\r\n  //create the final url--state.query and state.page should be used for search and also page number\r\n  useEffect(()=>{\r\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`)\r\n  },[state.query,state.page])   //for every page and every search we call the fetch again to upload the browser page again--otherwise we always on page one\r\n  \r\n\r\n  return <AppContext.Provider value={{...state, removeStory, handleSearch,handlePage}}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nconst SearchForm = () => {\r\n  const{query,handleSearch,fetchStories} = useGlobalContext()\r\n\r\n  const handleChange  = (e) =>{\r\n    return handleSearch(e.target.value)    //handleSearch works as same as setQuery\r\n  }\r\n  \r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n  }\r\n\r\n  return(\r\n    <form className='search-form' onSubmit={handleSubmit}>\r\n      <h2>search hacker news</h2>\r\n      <input type=\"text\" className='form-input' value={query} onChange={handleChange}/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nconst Stories = () => {\r\n  const{hits,query,removeStory} = useGlobalContext()   //hints is array of object and includes title,points,etc.\r\n\r\n\r\n  return(\r\n    <section className='stories'>\r\n      {hits.map((story)=>{\r\n        return(\r\n          <article className='story'>\r\n            <h4 className='title'>{story.title}</h4>\r\n            <p className='info'>{story.points}  points by \r\n            <span>{story.author}  | </span>\r\n            {story.num_comments}  comments\r\n            </p>\r\n            <div>\r\n              <a href={story.url} className='read-link'>read more</a>\r\n              <button className='remove-btn' onClick={()=>removeStory(story.objectID)}>remove</button>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Stories\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nconst Buttons = () => {\r\n  const {isLoading,page,nbPages,handlePage} = useGlobalContext()\r\n  return(\r\n    <div className='btn-container'>\r\n      <button disabled={isLoading} onClick={()=>handlePage('dec')}>prev</button>    \r\n      <p>{page+1} of {nbPages}</p>\r\n      <button disabled={isLoading} onClick={()=>handlePage('inc')}>next</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","import React from 'react'\r\nimport SearchForm from './SearchForm'\r\nimport Stories from './Stories'\r\nimport Buttons from './Buttons'\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <SearchForm />\r\n      <Buttons />\r\n      <Stories />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}